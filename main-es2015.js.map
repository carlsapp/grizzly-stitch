{"version":3,"sources":["./app/$_lazy_route_resource lazy namespace object","./app/app.component.ts","./app/app.module.ts","./app/app/environments/environment.ts","./app/main-aot.ts","./app/nav-bar.component.ts","./app/satin-stitch-corner-props.component.ts","./app/satin-stitch-props.component.ts","./app/shape-tree.component.ts","./app/stitchpath-props.component.ts","./node_modules/zone.js/dist/zone-evergreen.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;GAeG;AAEuC;AAChB;AACC;;;;AA6BpB,MAAM,YAAY;IAIvB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG;YACd,iBAAiB,EAAE,IAAI;YACvB,eAAe,EAAE,EAAE;YACnB,iBAAiB,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;SACvC,CAAC;QAEF,wCAAwC;QAClC,CAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC;QAC3C,CAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC;QACtC,CAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC;QAC1C,CAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,GAAG,EAAE,CAAC;IAChD,CAAC;IAED,eAAe;QACb,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QACnD,yFAAyF;QACzF,8BAA8B;QAC9B,uBAAuB,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;;wEAxBU,YAAY;4FAAZ,YAAY;QAxBrB,wEAAqE;QAErE,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EAA2E;QAC7E,4DAAM;QACN,yEACE;QAAA,uEAA6C;QAC/C,4DAAM;QACN,oEAAqC;QACvC,4DAAM;QACR,4DAAM;QAGN,yEACE;QAAA,yEACE;QAAA,0EACI;QAAA,yEAAuD;QAAA,qGAAyC;QAAA,4DAAI;QACxG,4DAAM;QACR,4DAAM;QACR,4DAAM;;QArBG,wFAA2B;QAKlB,0DAA2B;QAA3B,wFAA2B;;6FAmBpC,YAAY;cA3BxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;KAuBP;aACJ;;;;;;;;;;;;;;AC/CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;GAeG;AAEH,kBAAkB;AAC4B;AACY;AACX;AAC/C,cAAc;AACkC;AACY;AACN;AACqB;AACa;AACrB;AACzC;AACC;;AAiBpB,MAAM,SAAS;;wFAAT,SAAS,cAFP,2DAAY;4IAEd,SAAS,kBAdX;YACP,uEAAa;YACb,0DAAW;SACZ;mIAWU,SAAS,mBATlB,2DAAY;QACZ,wEAAkB;QAClB,kEAAe;QACf,uFAAyB;QACzB,oGAA+B;QAC/B,+EAAmB,aATnB,uEAAa;QACb,0DAAW;6FAYF,SAAS;cAfrB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;iBACZ;gBACD,YAAY,EAAE;oBACZ,2DAAY;oBACZ,wEAAkB;oBAClB,kEAAe;oBACf,uFAAyB;oBACzB,oGAA+B;oBAC/B,+EAAmB;iBACpB;gBACD,SAAS,EAAE,CAAE,2DAAY,CAAE;aAC5B;;;;;;;;;;;;;;AC7CD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;GAeG;AAEH,kEAAkE;AAClE,0EAA0E;AAC1E,uCAAuC;AACvC,gEAAgE;AAEjB;AAIc;;;AAE7D,IAAI,yEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,sDAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACjCpC;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;GAeG;AAKoB;;;;;;IAyCP,qEAA+C;IAAA,wEAA8C;IAAlC,+WAAiC;IAAC,uDAA0B;IAAA,4DAAI;IAAA,4DAAK;;;IAAnC,0DAA0B;IAA1B,oGAA0B;;;;;IAgE/H,0EACF;IAD0E,wXAAwC;IAAhH,4DACF;;;;IADgD,4JAAyB;IAA4G,2MAAiF;;;IA+BlQ,6EAA2E;IAAA,uDAAmB;IAAA,4DAAS;;;IAAxD,iGAA2B;IAAC,0DAAmB;IAAnB,oFAAmB;;AAvIxG,4BAA4B;AAC5B,6BAA6B;AAE7B,MAAM,WAAW;IAGf,YAAY,QAAgB;QAC1B,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC;IACtB,CAAC;CACF;AA0IM,MAAM,eAAe;IAQ1B;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG;YAClB,IAAI,WAAW,CAAC,qCAAqC,CAAC;YACtD,IAAI,WAAW,CAAC,yBAAyB,CAAC;YAC1C,IAAI,WAAW,CAAC,yBAAyB,CAAC;YAC1C,IAAI,WAAW,CAAC,0BAA0B,CAAC;YAC3C,IAAI,WAAW,CAAC,mCAAmC,CAAC;SACrD,CAAC;QACF,IAAI,CAAC,aAAa,GAAG,iBAAiB,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IACD,eAAe,CAAC,KAAU;QACxB,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YAChD,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,IAAI,gBAAgB,GAAG,IAAI,CAAC;YAC5B,MAAM,CAAC,MAAM,GAAG,UAAU,CAAM;gBAC9B,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC9C,CAAC,CAAC;YACF,MAAM,CAAC,OAAO,GAAG,UAAU,CAAM;gBAC/B,OAAO,CAAC,GAAG,CAAC,sCAAsC,GAAG,IAAI,CAAC,IAAI,GAAG,WAAW,EAAC,CAAC,CAAC,CAAC;YAClF,CAAC,CAAC;YACF,MAAM,CAAC,OAAO,GAAG,UAAU,CAAM;gBAC/B,OAAO,CAAC,GAAG,CAAC,sCAAsC,GAAG,IAAI,CAAC,IAAI,GAAG,WAAW,EAAC,CAAC,CAAC,CAAC;YAClF,CAAC,CAAC;YACF,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC3B;IACH,CAAC;IAED,sBAAsB;QACpB,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACrC,CAAC;IAED,SAAS,CAAC,cAAsB;QAC9B,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;QAC/C,IAAI,gBAAgB,GAAG,IAAI,CAAC;QAC5B,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,cAAc,EAAE;YACtC,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,UAAS,kBAAuB;gBACtC,+EAA+E;gBAC/E,+DAA+D;gBAC/D,oEAAoE;gBACpE,kBAAkB,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAChD,kBAAkB,CAAC,OAAO,GAAG,KAAK,CAAC;gBACnC,IAAI,KAAK,GAAG,QAAQ,CAAC,kBAAkB,CAAC,CAAC;gBACzC,IAAI,aAAa,GAAG,IAAI,UAAU,EAAE,CAAC;gBACrC,aAAa,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACpD,aAAa,CAAC,YAAY,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACnE,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC;gBAC9D,wFAAwF;gBACxF,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;gBAC5B,IAAI,QAAQ,GAAG,EAAE;oBACf,QAAQ,GAAG,EAAE,CAAC;gBAChB,yCAAyC;gBACzC,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;oBAChC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;oBAC1B,sEAAsE;oBACtE,IAAI,QAAQ,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;oBAC9C,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;oBACpC,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;oBAC9B,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBAC7B,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;oBAC1B,gCAAgC;oBAChC,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtD,QAAQ,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBAC/B,IAAI;wBACF,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;qBACrE;oBAAC,OAAO,CAAC,EAAE;wBACV,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;wBAC9D,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;qBAChB;4BAAS,GAAE;oBACZ,QAAQ,CAAC,KAAK,GAAG,aAAa,CAAC;oBAC/B,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBACrC;gBACD,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACjD,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;gBAC1C,OAAO,CAAC,GAAG,CAAC,iEAAiE,CAAC,CAAC;gBAC/E,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;YAC5C,CAAC;SACF,CAAC,CAAC;QACH,uCAAuC;QACvC,qBAAqB;IACvB,CAAC;IAED,SAAS,CAAC,UAAe;QACvB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,yBAAyB;QACzB,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,iBAAiB,GAAG,CAAC,CAAC;QAC1B,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAG,UAAU,CAAC,cAAc,IAAI,UAAU,CAAC,YAAY,EAAE;YACvD,KAAK,IAAI,eAAe,GAAG,CAAC,EAAE,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,eAAe,EAAE,EAAE;gBAC1F,mDAAmD;gBACnD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACvE,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACxD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBAChD,IAAI,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;wBAC3C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAClD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;4BACtD,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;yBACvD;qBACF;iBACF;aACF;SACF;QACD,KAAK,IAAI,eAAe,GAAG,CAAC,EAAE,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,eAAe,EAAE,EAAE;YACxF,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzE,8BAA8B;gBAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxD,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChD,IAAI,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAC3C,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACpD,+BAA+B;wBAC7B,sBAAsB;wBACtB,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;wBAC9G,IAAI,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;wBAC7E,IAAI,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;wBAC7E,IAAG,UAAU,CAAC,cAAc;4BAC1B,OAAO,GAAG,IAAI,GAAG,OAAO,CAAC;wBAC3B,IAAG,UAAU,CAAC,YAAY;4BACxB,OAAO,GAAG,IAAI,GAAG,OAAO,CAAC;wBAC3B,IAAG,UAAU,CAAC,iBAAiB,EAAE;4BAC/B,OAAO,GAAG,OAAO,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,iBAAiB,CAAC;4BAC5D,OAAO,GAAG,OAAO,GAAG,CAAC,OAAO,GAAG,UAAU,CAAC,iBAAiB,CAAC;yBAC7D;wBACD,IAAI,eAAe,GAAG,OAAO,GAAG,WAAW,CAAC;wBAC5C,IAAI,eAAe,GAAG,OAAO,GAAG,WAAW,CAAC;wBAE5C,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE,GAAG,CAAC,CAAC;wBAC/E,IAAI,aAAa,GAAG,IAAI,MAAM,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;wBACjE,WAAW,GAAG,OAAO,CAAC;wBACtB,WAAW,GAAG,OAAO,CAAC;wBACtB,IAAG,eAAe,GAAG,iBAAiB;4BACpC,iBAAiB,GAAG,eAAe,CAAC;wBACtC,IAAG,eAAe,GAAG,iBAAiB;4BACpC,iBAAiB,GAAG,eAAe,CAAC;wBACtC,gDAAgD;wBAChD,IAAG,CAAC,KAAK,CAAC,EAAE;4BACV,aAAa,CAAC,KAAK,IAAI,iBAAiB,CAAC,IAAI,CAAC;yBAC/C;wBACD,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;qBAChC;iBACF;aACF;SACJ;QACD,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,iBAAiB,CAAC,CAAC;QACxD,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,UAAU,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/C,IAAG,UAAU,CAAC,iBAAiB,IAAI,iBAAiB,GAAG,UAAU,CAAC,iBAAiB,EAAE;YACnF,qEAAqE;YACrE,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACvC,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3C,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3C,IAAG,UAAU,GAAG,UAAU,CAAC,iBAAiB,IAAI,UAAU,GAAG,UAAU,CAAC,iBAAiB,EAAE;oBACzF,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,UAAU,CAAC,CAAC,CAAC,EAAC,gCAAgC,EAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;oBACnG,uDAAuD;oBACvD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBACrI,IAAI,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;oBAChD,IAAI,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;oBAChD,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAChC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,SAAS,EAAC,cAAc,EAAC,aAAa,EAAC,GAAG,EAAC,aAAa,EAAC,GAAG,CAAC,CAAC;oBAC5F,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;wBAC/B,IAAG,CAAC,KAAK,CAAC,EAAE;4BACV,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,MAAM,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;yBAC1E;6BAAM;4BACL,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,MAAM,CAAC,aAAa,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC,CAAC;yBAC1E;qBACF;iBACF;gBACD,gEAAgE;gBAChE,gEAAgE;aACjE;SACF;QAED,IAAI,YAAY,GAAG,UAAS,IAAS,EAAE,QAAgB,EAAE,QAAgB;YACvE,IAAI,IAAI,EAAE,GAAQ,CAAC;YACnB,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;gBACtB,IAAI,EAAE,QAAQ;aACf,CAAC,CAAC;YACH,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACvC,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;YACrC,UAAU,CAAC;gBACT,OAAO,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YACzC,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC;QAEF,IAAI,WAAW,GAAG,UAAS,IAAS,EAAE,QAAgB,EAAE,QAAiB;YACvE,IAAI,CAAM,CAAC;YACX,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;YACd,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACtB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAC7B,CAAC,CAAC,KAAK,GAAG,eAAe,CAAC;YAC1B,CAAC,CAAC,KAAK,EAAE,CAAC;YACV,CAAC,CAAC,MAAM,EAAE,CAAC;QACb,CAAC,CAAC;QACF,IAAI,cAAc,GAAG,sBAAsB;QAC3C,IAAG,UAAU,CAAC,aAAa;YACzB,cAAc,GAAG,mBAAmB,GAAG,UAAU,CAAC,aAAa;QACjE,YAAY,CAAC,iBAAiB,CAAC,UAAU,CAAC,EAAE,cAAc,EAAE,0BAA0B,CAAC,CAAC;IAC1F,CAAC;;8EAtNU,eAAe;+FAAf,eAAe;QApIxB,yEACE;QACE,yEACE;QAAA,4EACE;QAAA,0EAAsB;QAAA,4EAAiB;QAAA,4DAAO;QAC9C,qEAA8B;QAC9B,qEAA8B;QAC9B,qEAA8B;QAChC,4DAAS;QACT,uEAAuD;QAAA,oEAA2I;QAAlM,4DAAuD;QACzD,4DAAM;QACN,0EACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEAAoH;QAAA,0EAAc;QAAA,uEAA2B;QAAA,4DAAI;QACjK,0EACE;QAAA,sEAAI;QAAA,yEAAgC;QAAA,yEAAa;QAAA,6EAA+G;QAA5F,+IAAU,2BAAuB,IAAC;QAAsD,4DAAI;QAA5J,4DAAgC;QAA4H,4DAAK;QACrK,sEAAI;QAAA,yEAA2D;QAAA,wEAAY;QAAA,4DAAI;QAAA,4DAAK;QACpF,sEAAI;QAAA,yEAA8D;QAAA,8EAAkB;QAAA,4DAAI;QAAA,4DAAK;QAC/F,4DAAK;QACP,4DAAK;QACL,yEACE;QAAA,yEAAoH;QAAA,mEAAO;QAAA,uEAA2B;QAAA,4DAAI;QAC1J,0EACE;QACA,4GAA+C;QAEjD,4DAAK;QACP,4DAAK;QACL,sEAAI;QAAA,yEAA6D;QAAA,oEAAQ;QAAA,4DAAI;QAAA,4DAAK;QAClF,sEAAI;QAAA,yEAAiB;QAAA,iEAAK;QAAA,4DAAI;QAAA,4DAAK;QAcrC,4DAAK;QAMP,4DAAM;QAEV,4DAAM;QAGV,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,4EAAgD;QAAA,wEAAY;QAAA,4DAAO;QACnE,8EACE;QAAA,4EAAyB;QAAA,kEAAO;QAAA,4DAAO;QACzC,4DAAS;QACX,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,6EAAsD;QAAA,yGAA6C;QAAA,4DAAQ;QAC3G,6EACF;QADyC,0LAA0B;QAAjE,4DACF;QAAA,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,8EAAqE;QAAA,kEAAM;QAAA,4DAAS;QACpF,8EAAqG;QAAvD,8IAAS,+BAAuB,IAAC;QAAsB,uEAAW;QAAA,4DAAS;QAC3H,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,4EAAmD;QAAA,uFAA2B;QAAA,4DAAO;QACrF,8EACE;QAAA,4EAAyB;QAAA,kEAAO;QAAA,4DAAO;QACzC,4DAAS;QACX,4DAAM;QACN,2EACE;QAAA,8GACF;QAAA,4DAAM;QACN,2EACE;QAAA,8EAAqE;QAAA,kEAAM;QAAA,4DAAS;QACpF,8EAAqG;QAAvD,8IAAS,+BAAuB,IAAC;QAAsB,uEAAW;QAAA,4DAAS;QAC3H,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,4EAAkD;QAAA,oEAAQ;QAAA,4DAAO;QACjE,8EACE;QAAA,4EAAyB;QAAA,kEAAO;QAAA,4DAAO;QACzC,4DAAS;QACX,4DAAM;QACN,2EACE;QAAA,6EAAsE;QAAA,sFAA0B;QAAA,4DAAQ;QACxG,8EACE;QAD8D,yMAAwC;QACtG,8EAAkC;QAAA,8DAAE;QAAA,4DAAS;QAC7C,8EAAuC;QAAA,8DAAE;QAAA,4DAAS;QAClD,8EAAkC;QAAA,8DAAE;QAAA,4DAAS;QAC/C,4DAAS;QACT,6EAAqL;QAAA,6EAAiB;QAAA,4DAAQ;QAC9M,6EACA;QADwC,sMAAsC;QAA9E,4DACA;QAAA,6EAAkE;QAAA,iFAAqB;QAAA,4DAAQ;QAC/F,8EACE;QAD0D,yMAAwC;QAClG,oHAA2E;QAC7E,4DAAS;QACX,4DAAM;QACN,uEAGM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAxGc,2DAA0C;QAA1C,sFAA0C;QA0Cb,2DAA0B;QAA1B,qFAA0B;QAsB9D,2DAAwC;QAAxC,qFAAwC;QAsBmB,2DAAwC;QAAxC,mGAAwC;QAMhE,0DAAsC;QAAtC,iGAAsC;QAElB,0DAAwC;QAAxC,mGAAwC;QAC1F,0DAAsC;QAAtC,oFAAsC;;6FAY3C,eAAe;cAxI3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAoIP;aACJ;;kBAGE,mDAAK;;kBACL,mDAAK;;AAsNR,IAAI,QAAQ,GAAG,UAAS,KAAU;IAChC,yEAAyE;IACzE,iFAAiF;IACjF,wDAAwD;IACxD,IAAI,KAAK,GAAU,EAAE,CAAC;IACtB,IAAG,KAAK,YAAY,KAAK,CAAC,KAAK,IAAI,KAAK,YAAY,KAAK,CAAC,YAAY,EAAE;QACvE,yEAAyE;QACxE,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClD,uCAAuC;SACxC;KACF;SAAM,IAAG,KAAK,YAAY,KAAK,CAAC,KAAK,EAAE;QACtC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;QAC3B,KAAK,CAAC,MAAM,EAAE,CAAC;KAChB;SAAM,IAAG,KAAK,YAAY,KAAK,CAAC,IAAI,EAAC;QACpC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnB;SAAM;QACL,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;KAChD;IACD,sDAAsD;IACtD,OAAO,KAAK,CAAC;AACf,CAAC;;;;;;;;;;;;;ACtZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;GAeG;AAE8C;AACjD,kEAAkE;AACxC;AACC;;;;IA0BzB,sEAA2C;IAAA,6EAAkB;IAAA,2EAAmF;IAAA,uDAA+B;IAAA,4DAAO;IAAA,4DAAM;;;IAAzH,0DAAkC;IAAlC,qHAAkC;IAA2C,0DAA+B;IAA/B,oGAA+B;;;;IAC/K,sEACE;IAAA,0EACA;IAAA,0EACE;IAAA,6EACE;IAAA,uDACA;IAAA,qEAA2B;IAC7B,4DAAS;IACT,wEACE;IAAA,wEAAqB;IAAA,uEAAY;IAAA,yFAA8B;IAAA,4DAAI;IAAA,4DAAK;IACxE,qEAA0C;IAC1C,sEAAI;IAAA,yEAA2C;IAA/B,4UAA2B,CAAC,KAAE;IAAC,6DAAC;IAAA,4DAAI;IAAA,4DAAK;IACzD,sEAAI;IAAA,yEAA2C;IAA/B,4UAA2B,CAAC,KAAE;IAAC,6DAAC;IAAA,4DAAI;IAAA,4DAAK;IAC3D,4DAAK;IACP,4DAAO;IACT,4DAAM;;;IAVA,0DACA;IADA,2GACA;;;;AAaD,MAAM,+BAA+B;IAQ1C;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,WAAW,EAAE,CAAC;IAChC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,0BAA0B;QAC1B,MAAM,mBAAmB,GAAG,CAAC,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpE,mBAAmB,CAAC,QAAQ,CAAC;YAC3B,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;gBAC/C,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACvF,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACnE,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC7B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;SACb,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,UAAU;QAC1B,IAAI,UAAU,KAAK,IAAI,CAAC,WAAW,CAAC,WAAW;YAC7C,OAAO;QACT,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,UAAU,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAED,iBAAiB;QACf,iFAAiF;QACjF,gEAAgE;QAChE,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,gBAAgB,CAAC,aAAa;QAC5B,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,aAAa;YACzC,OAAO;QACT,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC3B,iGAAiG;QACjG,MAAM,SAAS,GAAG,IAAI,CAAC;QACvB,UAAU,CAAC,GAAG,EAAE;YACd,SAAS,CAAC,eAAe,EAAE,CAAC;QAC9B,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAED,MAAM;QACJ,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS;YAClC,OAAO;QACT,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC9E,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS;YAClC,OAAO;QACT,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;IACjC,CAAC;;8GAnEU,+BAA+B;+GAA/B,+BAA+B;QAvC5C,yEACE;QAAA,uEAA+J;QAA5J,wJAAS,uBAAmB,IAAC;QAA2H,4DAAI;QAC/J,0EAAuG;QAAnD,2JAAS,gDAAwC,IAAC;QAAC,uDAA4B;QAAA,4DAAO;QAC5I,4DAAM;QACN,yEACE;QAAA,sEACE;QAAA,0EACE;QAAA,4EACE;QAAA,uDACA;QAAA,qEAA2B;QAC7B,4DAAS;QACT,yEACE;QAAA,yEAAqB;QAAA,wEAAY;QAAA,gFAAoB;QAAA,4DAAI;QAAA,4DAAK;QAC9D,qEAA0C;QAC1C,sEAAI;QAAA,yEAAgD;QAApC,yJAAS,qBAAiB,OAAO,CAAC,IAAC;QAAC,0EAAc;QAAA,4DAAI;QAAA,4DAAK;QAC3E,sEAAI;QAAA,yEAAkD;QAAtC,yJAAS,qBAAiB,SAAS,CAAC,IAAC;QAAC,4EAAgB;QAAA,4DAAI;QAAA,4DAAK;QAC/E,sEAAI;QAAA,yEAA+C;QAAnC,yJAAS,qBAAiB,MAAM,CAAC,IAAC;QAAC,yEAAa;QAAA,4DAAI;QAAA,4DAAK;QAC3E,4DAAK;QACP,4DAAO;QACT,4DAAM;QACN,8HAA2C;QAC3C,+HACE;QAcJ,4DAAM;;QApCwB,kMAA4E;QACvE,0DAA2F;QAA3F,uKAA2F;QACrB,0DAA4B;QAA5B,sGAA4B;QAEhI,0DAA4B;QAA5B,2GAA4B;QAIzB,0DACA;QADA,gGACA;QAWD,2DAAqC;QAArC,mGAAqC;QACrC,0DAAkC;QAAlC,gGAAkC;;6FAkB5B,+BAA+B;cA1C3C,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsCP;aACJ;;kBAEE,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;ACpER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;GAeG;AAE8C;AACjD,kEAAkE;AACxC;AACC;;;;;IASzB,0FAAwM;;;;IAAvH,mFAAsB;;AAIlG,MAAM,yBAAyB;IAOpC;QACE,IAAI,CAAC,aAAa,GAAG,eAAe,GAAG,WAAW,EAAE,CAAC;QACrD,IAAI,CAAC,eAAe,GAAG,iBAAiB,GAAG,WAAW,EAAE,CAAC;IAC3D,CAAC;IAED,eAAe;QACb,8EAA8E;QAC9E,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,IAAI,eAAe,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAClD,eAAe,CAAC,QAAQ,CAAC;YACvB,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;gBAC/C,UAAU,CAAC,WAAW,CAAC,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC/D,UAAU,CAAC,QAAQ,EAAE,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;QACH,IAAI,iBAAiB,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;QACtD,iBAAiB,CAAC,QAAQ,CAAC;YACzB,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;gBAC/C,UAAU,CAAC,WAAW,CAAC,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACjE,UAAU,CAAC,QAAQ,EAAE,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;;kGA7BU,yBAAyB;yGAAzB,yBAAyB;QAPtC,sEACE;QAAA,yEAAgC;QAAA,yEAAc;QAAA,0EAA6B;QAAA,uDAAgC;QAAA,4DAAO;QAAA,4DAAM;QACxH,yEAAiC;QAAA,2EAAgB;QAAA,0EAA+B;QAAA,uDAAkC;QAAA,4DAAO;QAAA,4DAAM;QAC/H,iKAA4K;QAC9K,4DAAM;;QAHgD,0DAAsB;QAAtB,4FAAsB;QAAC,0DAAgC;QAAhC,iGAAgC;QACpD,0DAAwB;QAAxB,8FAAwB;QAAC,0DAAkC;QAAlC,mGAAkC;QACvF,0DAAqD;QAArD,uGAAqD;;6FAIrE,yBAAyB;cAVrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,QAAQ,EAAE;;;;;;KAMP;aACJ;;kBAEE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;;ACjCR;AAAA;AAAA;AAAA;AAAA;AAGuB;;;;;IAoCP,kFAAwI;;;;IAAzE,qFAAyB;;;;;;;IAlB9F,sEACE;IAAA,0EAAkF;IAAA,2EAChF;IAAA,wEAA2K;IAAlC,0WAA6B;IAAC,4DAAI;IAC3K,wEAAuE;IAA9B,sWAAyB;IAAC,4DAAI;IACvE,2EAAqE;IAAA,uDAAc;IAAA,4DAAO;IAC1F,2EACE;IAAA,mEAA2F;IAC3F,wEAA8F;IAArC,wLAAS,wBAAqB,IAAC;IAAE,4DAAI;IAC9F,yEAAgP;IAA7O,2OAAkD;IAAuL,4DAAI;IAChP,yEAA6I;IAAxG,+WAA+B;IAAqE,4DAAI;IAC/I,4DAAO;IACT,4DAAO;IAAA,4DAAM;IACb,2EACE;IAEA,2EAAgC;IAAA,4EAAqD;IAAA,kEAAM;IAAA,4EAAkD;IAAA,wDAAsC;IAAA,4DAAO;IAAC,wDAAiC;IAAA,4EAAoD;IAAA,wDAAuC;IAAA,4DAAO;IAAC,wDAA8B;IAAA,4DAAO;IAAA,4DAAM;IAC1W,2EAAgC;IAAA,4EAAsD;IAAA,sEAAU;IAAA,4EAAmD;IAAA,wDAAoC;IAAA,4DAAO;IAAC,wDAAiC;IAAA,4EAAmD;IAAA,wDAAoC;IAAA,4DAAO;IAAC,wDAA8B;IAAA,4DAAO;IAAA,4DAAM;IAC1W,2EACE;IAAA,wJAAqH;IACvH,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;IApB0B,0DAAmD;IAAnD,4KAAmD;IAC9C,0DAAuG;IAAvG,kLAAuG;IAElI,0DAA4B;IAA5B,0GAA4B;IAAmC,0DAAc;IAAd,8EAAc;IAE9E,0DAA6B;IAA7B,2GAA6B;IAEsB,0DAAmG;IAAnG,0LAAmG;IAA+B,2GAAmD;IAI1O,0DAA8B;IAA9B,4GAA8B;IAGgE,0DAA6B;IAA7B,2GAA6B;IAAe,0DAAsC;IAAtC,6GAAsC;IAAQ,0DAAiC;IAAjC,+GAAiC;IAAM,0DAA8B;IAA9B,4GAA8B;IAAgB,0DAAuC;IAAvC,8GAAuC;IAAQ,0DAA8B;IAA9B,4GAA8B;IACvP,0DAAkC;IAAlC,gHAAkC;IAAW,0DAAoC;IAApC,2GAAoC;IAAQ,0DAAiC;IAAjC,+GAAiC;IAAM,0DAAkC;IAAlC,gHAAkC;IAAW,0DAAoC;IAApC,2GAAoC;IAAQ,0DAA8B;IAA9B,4GAA8B;IAEzU,0DAA4C;IAA5C,yFAA4C;;;;IA3BxE,sEACE;IAAA,0EACE;IAAA,wEAA0L;IAAvC,+WAAkC;IAAC,4DAAI;IAC1L,wEAA4E;IAAnC,2WAA8B;IAAC,4DAAI;IAC5E,2EAA+E;IAAA,uDAAmB;IAAA,4DAAO;IACzG,2EAA2B;IAAA,wEAAiT;IAA9S,kQAA4E;IAA8N,4DAAI;IAAA,4DAAO;IACrV,4DAAM;IACN,0EACE;IAAA,2EAAiC;IAAA,4EAAgC;IAAA,kEAAM;IAAA,4DAAO;IAAA,4EAA4D;IAAA,wDAAmD;IAAA,4DAAO;IAAA,4EAAiC;IAAA,wDAAiC;IAAA,4DAAO;IAAA,4EAA8D;IAAA,wDAAoD;IAAA,4DAAO;IAAA,4EAAiC;IAAA,wDAA8B;IAAA,4DAAO;IAAA,4DAAO;IACnd,wHACE;IAqBJ,4DAAM;IACR,4DAAM;;;;IA/B0B,0DAAwD;IAAxD,iLAAwD;IACnD,0DAAiH;IAAjH,4LAAiH;IAE5I,0DAAsC;IAAtC,oHAAsC;IAAmC,0DAAmB;IAAnB,mFAAmB;IACS,0DAA6H;IAA7H,oNAA6H;IAA+B,wHAAgE;IAEpU,0DAAwC;IAAxC,sHAAwC;IACyC,0DAAuC;IAAvC,qHAAuC;IAAe,0DAAmD;IAAnD,0HAAmD;IAAwC,0DAAiC;IAAjC,+GAAiC;IAAa,0DAAwC;IAAxC,sHAAwC;IAAgB,0DAAoD;IAApD,2HAAoD;IAAwC,0DAA8B;IAA9B,4GAA8B;IAChc,0DAAuC;IAAvC,yFAAuC;;AAjBtD,4BAA4B;AAC5B,6BAA6B;AA+DtB,MAAM,kBAAkB;IAU7B;QACE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,KAAK,EAAE,CAAC;IACnC,CAAC;IAED,kBAAkB;QAChB,0GAA0G;QAC1G,IAAG,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,IAAI,CAAC,cAAc,EAAE;YAClD,IAAI,UAAU,GAAG,IAAI,CAAC;YACtB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAI,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACrC,CAAC,CAAC,mBAAmB,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;oBAC9C,KAAK,EAAE,sBAAsB;oBAC7B,SAAS,EAAE,QAAQ;oBACnB,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;wBAC/C,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;oBAC7D,CAAC;iBACF,CAAC,CAAC;gBACH,CAAC,CAAC,cAAc,GAAG,UAAU,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,QAAQ,CAAC;oBACpD,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;wBAC/C,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACzD,CAAC;iBACF,CAAC,CAAC;gBACH,CAAC,CAAC,cAAc,GAAG,UAAU,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,QAAQ,CAAC;oBACrD,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;wBAC/C,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC1D,CAAC;iBACF,CAAC,CAAC;gBACH,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACzD,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBAC1C,kDAAkD;oBAClD,CAAC,CAAC,cAAc,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC;wBACpC,KAAK,EAAE,kBAAkB;wBACzB,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;4BAC/C,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;wBAC7D,CAAC;qBACF,CAAC,CAAC;oBACH,+DAA+D;oBAC/D,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,GAAG,SAAS,CAAC,CAAC,QAAQ,CAAC;wBAC3C,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;4BAC/C,KAAK,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACrD,CAAC;qBACF,CAAC,CAAC;oBACH,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,QAAQ,CAAC;wBAC1C,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;4BAC/C,KAAK,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACpD,CAAC;qBACF,CAAC,CAAC;oBACH,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC,QAAQ,CAAC;wBAC/C,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;4BAC/C,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC9C,CAAC;qBACF,CAAC,CAAC;oBACH,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC,QAAQ,CAAC;wBAC/C,OAAO,EAAE,UAAS,QAAa,EAAE,QAAgB;4BAC/C,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;wBAC9C,CAAC;qBACF,CAAC,CAAC;oBACH,8CAA8C;oBAC9C,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;oBAChF,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,WAAW,CAAC;wBAC7C,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;qBACtC,CAAC,CAAC,EAAE,CAAC,aAAa,EAAE,UAAS,CAAC;wBAC7B,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC1D,KAAK,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;wBAClD,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC5E,CAAC,CAAC,CAAC;iBACJ;aACF;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;SAC/C;IACH,CAAC;IAED,QAAQ,CAAC,YAAY;QACnB,kFAAkF;QAClF,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,SAAS;YAC3E,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAI,YAAY,KAAK,IAAI,CAAC,WAAW,EAAE;YACrC,gFAAgF;YAChF,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,OAAO;SACR;QACD,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC;QAChC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,KAAK,SAAS;YACvC,YAAY,CAAC,MAAM,EAAE,CAAC;IAC1B,CAAC;IAED,YAAY,CAAC,MAAuC;QAClD,kHAAkH;QAClH,MAAM,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;QACnC,IAAG,MAAM,YAAY,KAAK,EAAE;YACpB,CAAC,CAAC,gBAAgB,GAAC,MAAM,CAAC,EAAE,CAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACzD;aAAM,IAAG,MAAM,YAAY,UAAU,EAAE;YAChC,CAAC,CAAC,iBAAiB,GAAC,MAAM,CAAC,WAAW,CAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SACnE;aAAM,IAAG,MAAM,YAAY,UAAU,EAAE;YAChC,CAAC,CAAC,qBAAqB,GAAC,MAAM,CAAC,EAAE,CAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SAC9D;IACH,CAAC;IAED,SAAS,CAAC,OAAe;QACvB,6EAA6E;QAC7E,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACzE,CAAC;IAED,SAAS,CAAC,SAAiB;QACzB,6EAA6E;QAC7E,OAAO,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;IACnD,CAAC;;oFArHU,kBAAkB;kGAAlB,kBAAkB;QAzD3B,yEACE;QAAA,gHACE;QAgCJ,4DAAM;QAEV,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAAqD;QAAA,+EAAoB;QAAA,4DAAO;QAChF,4EACE;QAAA,0EAAyB;QAAA,kEAAO;QAAA,4DAAO;QACzC,4DAAS;QACX,4DAAM;QACN,0EACE;QAAA,wDACF;QAAA,4DAAM;QACN,2EACE;QAAA,8EAAqE;QAAA,kEAAM;QAAA,4DAAS;QACpF,8EAAoG;QAAtD,iJAAS,0BAAsB,IAAC;QAAsB,kEAAM;QAAA,4DAAS;QACrH,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QArDK,0DAAsC;QAAtC,oFAAsC;QA6CzC,2DACF;QADE,4IACF;;6FAUO,kBAAkB;cA5D9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAwDP;aACJ;;kBAEE,mDAAK;;kBAEL,mDAAK;;;;;;;;;;;;;;ACzER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;GAeG;AAE8C;AACjD,kEAAkE;AACxC;AACC;;;;;;IAiBrB,qEACE;IAAA,wEAAmD;IAAvC,sXAAsC;IAAC,uDAAmB;IAAA,4DAAI;IAC5E,4DAAK;;;IADgD,0DAAmB;IAAnB,oFAAmB;;;IAW5E,oFAA0K;;;IAAzF,0FAAyB;;;IAExG,0EAA6F;IAAA,uDAA0E;IAAA,4DAAM;;;;IAAhF,0DAA0E;IAA1E,kKAA0E;;;IADzK,wEACE;IAAA,gIAA6F;IAC/F,qEAAe;;;IADR,0DAA4D;IAA5D,8GAA4D;;;;AAK9D,MAAM,mBAAmB;IAM9B;QACE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACjC,CAAC;IAED,eAAe;QACb,8CAA8C;QAC9C,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU;QAChC,IAAI,WAAW,GAAG,CAAC,CAAC,cAAc,GAAG,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC;QACxE,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9D,WAAW,CAAC,WAAW,CAAC;YACtB,KAAK,EAAE,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;SAC3C,CAAC,CAAC,EAAE,CAAC,aAAa,EAAE,UAAS,CAAC;YAC7B,4DAA4D;YAC5D,IAAI,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC3C,UAAU,CAAC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC1C,UAAU,CAAC,YAAY,CAAC,WAAW,GAAG,WAAW,CAAC;YAClD,UAAU,CAAC,YAAY,CAAC,SAAS,GAAG,WAAW,CAAC;YAChD,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,4EAA4E;QAC5E,gEAAgE;QAChE,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACtE,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,gBAAgB,CAAC,UAAsB;QACrC,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QAC9E,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,oEAAoE,CAAC,CAAC;QAClF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACvC,CAAC;;sFAvCU,mBAAmB;mGAAnB,mBAAmB;QA9BhC,yEAAwD;QAA0B,0EAChF;QAAA,uEAA+J;QAAlC,4IAAS,uBAAmB,IAAC;QAAC,4DAAI;QAC/J,kEAA2C;QAC3C,0EACE;QAAA,4EACE;QAAA,uDACA;QAAA,qEAA2B;QAC7B,4DAAS;QACT,wEACE;QAAA,wEAAqB;QAAA,wEAAY;QAAA,2EAAe;QAAA,4DAAI;QAAA,4DAAK;QACzD,qEAA0C;QAC1C,gHACE;QAEJ,4DAAK;QACP,4DAAO;QACP,4EACE;QAAA,oEAA+G;QAC/G,yEAA+R;QAA5J,iPAA8F;QAA0D,4DAAI;QAC/R,yEAA6F;QAAxD,6IAAS,uBAAmB,IAAC;QAAuB,4DAAI;QAC/F,4DAAO;QACT,4DAAO;QAAA,4DAAM;QACb,2EACE;QAAA,gJAAqJ;QACrJ,oIACE;QAEJ,4DAAM;;QA1B6B,0DAA2F;QAA3F,uKAA2F;QAIxH,0DACA;QADA,0GACA;QAKI,0DAAsC;QAAtC,oFAAsC;QAMzC,0DAAgD;QAAhD,+HAAgD;QAC9B,0DAA6G;QAA7G,sMAA6G;QAAgG,iHAAwD;QAIzR,0DAA6C;QAA7C,4HAA6C;QAC5B,0DAA4D;QAA5D,0HAA4D;QAClE,0DAAiD;QAAjD,+GAAiD;;6FAMpD,mBAAmB;cAjC/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6BP;aACJ;;kBAEE,mDAAK;;kBACL,mDAAK;;;;;;;;;;;;;AC1DR;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,KAA0C,GAAG,oCAAO,OAAO;AAAA;AAAA;AAAA;AAAA,oGAAC;AAChE,IAAI,SAAS;AACb,CAAC,cAAc;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iEAAiE;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B;AACjE,sCAAsC,qBAAqB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,UAAU,6CAA6C,eAAe;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpwBAAwB,mBAAmB;AAC3C,yBAAyB,oBAAoB;AAC7C,qCAAqC,8CAA8C;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU,IAAI,YAAY,4BAA4B,QAAQ,sBAAsB,WAAW,GAAG,+CAA+C,SAAS,YAAY;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,yBAAyB;AACzB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gIAAgI,wBAAwB,oCAAoC;AAC5L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,4BAA4B,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B;AAChE,2CAA2C,cAAc;AACzD,8CAA8C,2CAA2C;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qCAAqC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,qCAAqC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,sEAAsE;AAC1J;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAoD;AAChG;AACA;AACA;AACA;AACA;AACA,+BAA+B,mCAAmC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2EAA2E,gBAAgB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qCAAqC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,2CAA2C,gBAAgB;AAC3D,0CAA0C,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,iDAAiD;AACjF;AACA;AACA;AACA,+CAA+C,6BAA6B;AAC5E,8CAA8C,kCAAkC;AAChF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,0CAA0C,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0CAA0C,wCAAwC;AAClF,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,uCAAuC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,oCAAoC;AACroDAAoD,cAAc,mBAAmB,yBAAyB,EAAE,EAAE;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0BAA0B;AACrmCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,GAAG,OAAO;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sDAAsD;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,8FAA8F;AAC9F,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4EAA4E;AAC3F;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,yBAAyB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,0CAA0C;AAClH;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./app/$$_lazy_route_resource lazy recursive\";","/**\n * Copyright 2017 Grizzly Stitch\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n**/\n\nimport { Component } from '@angular/core';\nimport 'reflect-metadata';\nimport 'zone.js/dist/zone';\n\n@Component({\n  selector: 'my-app',\n  template: `\n    <nav-bar [shapeGroups]=\"shapeGroups\" [settings]=\"settings\"></nav-bar>\n\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-sm-3 col-md-3\" style=\"height: calc(100vh - 122px); overflow-y: auto;\">\n          <shape-tree [shapeGroups]=\"shapeGroups\" [settings]=\"settings\"></shape-tree>\n        </div>\n        <div class=\"col-sm-8 col-md-7\" style=\"height: calc(100vh - 122px);\">\n          <canvas id=\"myCanvas\" resize=\"true\"></canvas>\n        </div>\n        <div class=\"col-sm-1 col-md-2\"></div>\n      </div>\n    </div>\n\n    <!-- Bottom Fixed Footer -->\n    <nav class=\"navbar navbar-default navbar-fixed-bottom\">\n      <div class=\"container\">\n        <div class=\"col-sm-12 text-center navbar-text\">\n            <a href=\"http://www.grizzlystitch.org\" target=\"_blank\">An Open Source Project By People Like You</a>\n        </div>\n      </div>\n    </nav>\n    `,\n})\nexport class AppComponent {\n  shapeGroups: any[];\n  settings: any;\n  \n  constructor() {\n    this.shapeGroups = [];\n    this.settings = {\n      measurement_units: \"mm\",\n      pixels_per_unit: 72,\n      defaultStitchType: stitchTypes[0].name,\n    };\n    \n    // Configure our defaults for X-Editable\n    (<any>$).fn.editable.defaults.container = 'body';\n    (<any>$).fn.editable.defaults.type = 'text';\n    (<any>$).fn.editable.defaults.unsavedclass = '';\n    (<any>$).fn.editable.defaults.inputclass = '';\n  }\n  \n  ngAfterViewInit() {\n    console.log(\"Initializing our drawing canvas ...\");\n    // This function call needs to be in a ngAfterViewInit() so that its called after Angular\n    // creates our <canvas> object\n    initializeDrawingCanvas('myCanvas');\n  }\n\n\n}\n","/**\n * Copyright 2017 Grizzly Stitch\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n**/\n\n// Angular Imports\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule }   from '@angular/forms';\n// Our Imports\nimport { AppComponent }  from './app.component';\nimport { ShapeTreeComponent } from './shape-tree.component';\nimport { NavBarComponent } from './nav-bar.component';\nimport { SatinStitchPropsComponent } from './satin-stitch-props.component';\nimport { SatinStitchCornerPropsComponent } from './satin-stitch-corner-props.component';\nimport { StitchPathComponent } from './stitchpath-props.component';\nimport 'reflect-metadata';\nimport 'zone.js/dist/zone';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  declarations: [\n    AppComponent,\n    ShapeTreeComponent,\n    NavBarComponent,\n    SatinStitchPropsComponent,\n    SatinStitchCornerPropsComponent,\n    StitchPathComponent,\n  ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * Copyright 2017 Grizzly Stitch\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n**/\n\n// import { platformBrowser }    from '@angular/platform-browser';\n// import { AppModuleNgFactory } from '../build/app/app.module.ngfactory';\n// console.log('Running AOT compiled');\n// platformBrowser().bootstrapModuleFactory(AppModuleNgFactory);\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\nimport { environment } from './app/environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/**\n * Copyright 2017 Grizzly Stitch\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n**/\n\nimport {\n  Component,\n  Input,\n} from '@angular/core';\n//import 'reflect-metadata';\n//import 'zone.js/dist/zone';\n\nclass SampleShape{\n  selected: boolean;\n  url: string;\n  constructor(shapeUrl: string) {\n    this.url = shapeUrl;\n  }\n}\n\n@Component({\n  selector: 'nav-bar',\n  template: `\n    <!-- Fixed navbar -->\n    <nav class=\"navbar navbar-default navbar-fixed-top\">\n      <!--div class=\"container\"-->\n        <div class=\"navbar-header\">\n          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n          <a href=\"http://www.grizzlystitch.org\" target=\"_blank\"><img src=\"GrizzlyStitchLogo.svg\" style=\"height: 40px; padding-top: 5px; padding-left: 5px; padding-right: 20px\" title=\"Grizzly Stitch\"></a>\n        </div>\n        <div id=\"navbar\" class=\"navbar-collapse collapse\">\n          <ul class=\"nav navbar-nav\">\n            <li class=\"dropdown\">\n              <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Insert Shapes <span class=\"caret\"></span></a>\n              <ul class=\"dropdown-menu\">\n                <li><a href=\"#\" class=\"choose-file\">From SVG File<input type=\"file\" (change)=\"svgFileUploaded($event)\" id=\"choose-svg-file\" accept=\"image/svg+xml\" multiple></a></li>\n                <li><a href=\"#\" data-toggle=\"modal\" data-target=\"#svgUrlModal\">From SVG URL</a></li>\n                <li><a href=\"#\" data-toggle=\"modal\" data-target=\"#svgShapesModal\">From Sample Shapes</a></li>\n              </ul>\n            </li>\n            <li class=\"dropdown\">\n              <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Export <span class=\"caret\"></span></a>\n              <ul class=\"dropdown-menu\">\n                <!--li><a href=\"#\" (click)=\"exportDst()\">DST File</a></li-->\n                <li *ngFor=\"let exportFormat of exportFormats\"><a href=\"#\" (click)=\"exportDst(exportFormat)\">{{exportFormat.name}} File</a></li>\n                <!--li><a href=\"#\" data-toggle=\"modal\" data-target=\"#svgUrlModal\">XSEW File</a></li-->\n              </ul>\n            </li>\n            <li><a href=\"#\" data-toggle=\"modal\" data-target=\"#settingsModal\">Settings</a></li>\n            <li><a href=\"#about\">About</a></li>\n            <!--li><a href=\"#contact\">Contact</a></li>\n            <li class=\"dropdown\">\n              <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown <span class=\"caret\"></span></a>\n              <ul class=\"dropdown-menu\">\n                <li><a href=\"#\">Action</a></li>\n                <li><a href=\"#\">Another action</a></li>\n                <li><a href=\"#\">Something else here</a></li>\n                <li role=\"separator\" class=\"divider\"></li>\n                <li class=\"dropdown-header\">Nav header</li>\n                <li><a href=\"#\">Separated link</a></li>\n                <li><a href=\"#\">One more separated link</a></li>\n              </ul>\n            </li-->\n          </ul>\n          <!--ul class=\"nav navbar-nav navbar-right\">\n            <li><a href=\"../navbar/\">Default</a></li>\n            <li><a href=\"../navbar-static-top/\">Static top</a></li>\n            <li class=\"active\"><a href=\"./\">Fixed top <span class=\"sr-only\">(current)</span></a></li>\n          </ul-->\n        </div><!--/.nav-collapse -->\n      <!--/div--> <!-- container -->\n    </nav>\n\n<!-- SVG File URL Modal -->\n<div class=\"modal fade\" id=\"svgUrlModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"svgUrlModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <span class=\"modal-title\" id=\"svgUrlModalLabel\">SVG File URL</span>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"inputSuccess1\">Please enter the URL for the SVG file to add:</label>\n          <input type=\"url\" class=\"form-control\" [(ngModel)]=\"svgImportUrl\" id=\"inputSuccess1\">\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"importSVG(svgImportUrl)\" data-dismiss=\"modal\">Load Shapes</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Sample Shapes Modal -->\n<div class=\"modal fade\" id=\"svgShapesModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"svgShapesModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <span class=\"modal-title\" id=\"svgShapesModalLabel\">Choose the Shapes to Insert</span>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <img *ngFor=\"let sampleShape of sampleShapes\" src=\"{{sampleShape.url}}\" (click)=\"svgImportUrl = sampleShape.url\" (dblclick)=\"importSVG(sampleShape.url); closeSampleShapesModal()\" [ngStyle]=\"{'border-color': svgImportUrl === sampleShape.url ? 'blue' : 'white'}\" style=\"height:100px; width:auto; border: 3px solid white; border-radius: 5px; padding: 5px\" />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"importSVG(svgImportUrl)\" data-dismiss=\"modal\">Load Shapes</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Settings Modal -->\n<div class=\"modal fade\" id=\"settingsModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"settingsModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <span class=\"modal-title\" id=\"settingsModalLabel\">Settings</span>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body form-group\">\n        <label class=\"form-control-label\" for=\"settingsMeasurementUnitSelect\">Length Measurement Units: </label>\n        <select class=\"form-control\" id=\"settingsMeasurementUnitSelect\" [(ngModel)]=\"settings.measurement_units\">\n          <option value=\"in\" title=\"Inches\">in</option>\n          <option value=\"mm\" title=\"Millimeters\">mm</option>\n          <option value=\"px\" title=\"Pixels\">px</option>\n        </select>\n        <label class=\"form-control-label\" for=\"settingsPixelsPerUnit\" title=\"The number of pixels per unit selected in Length Measurement Units to be used when converting px measurements.\">Pixels Per Unit: </label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"settings.pixels_per_unit\" id=\"settingsPixelsPerUnit\">\n        <label class=\"form-control-label\" for=\"settingsDefaultStitchType\">Default Stitch Type: </label>\n        <select class=\"form-control\" id=\"settingsDefaultStitchType\" [(ngModel)]=\"settings.defaultStitchType\">\n          <option *ngFor=\"let stitchType of stitchTypes\" value=\"{{stitchType.name}}\">{{stitchType.name}}</option>\n        </select>\n      </div>\n      <div class=\"modal-footer\">\n        <!--button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"importSVG(svgImportUrl)\" data-dismiss=\"modal\">Load Shapes</button-->\n      </div>\n    </div>\n  </div>\n</div>\n    `,\n})\nexport class NavBarComponent {\n  // We'll tie shapes to the variable passed to [shapes] in <nav-bar>\n  @Input() shapeGroups: ShapeGroup[];\n  @Input() settings: any;\n  svgImportUrl: string;\n  sampleShapes: SampleShape[];\n  exportFormats: any[];\n  stitchTypes: any[];\n  constructor() {\n    this.svgImportUrl = '';\n    this.sampleShapes = [\n      new SampleShape(\"sample-shapes/GrizzlyStitchLogo.svg\"),\n      new SampleShape(\"sample-shapes/truck.svg\"),\n      new SampleShape(\"sample-shapes/heart.svg\"),\n      new SampleShape(\"sample-shapes/square.svg\"),\n      new SampleShape(\"sample-shapes/TestStitchShape.svg\"),\n    ];\n    this.exportFormats = exportDataFormats;\n    this.stitchTypes = stitchTypes;\n  }\n  svgFileUploaded(event: any) {\n    var files = event.target.files;\n    for (var i = 0; i < event.target.files.length; ++i) {\n        let file = event.target.files[i];\n        let reader = new FileReader();\n        let ourappcontroller = this;\n        reader.onload = function (e: any) {\n          ourappcontroller.importSVG(e.target.result);\n        };\n        reader.onabort = function (e: any) {\n          console.log(\"WARNING: In onabort() while reading \" + file.name + \". Event: \",e);\n        };\n        reader.onerror = function (e: any) {\n          console.log(\"WARNING: In onerror() while reading \" + file.name + \". Event: \",e);\n        };\n        reader.readAsText(file);\n    }\n  }\n  \n  closeSampleShapesModal() {\n    $('#svgShapesModal').modal('hide');\n  }\n  \n  importSVG(svgStringOrUrl: string) {\n    console.log(\"Importing SVG: \", svgStringOrUrl);\n    var ourappcontroller = this;\n    paper.project.importSVG(svgStringOrUrl, {\n      expandShapes: true,\n      insert: false,\n      onLoad: function(paperJsShapesGroup: any){\n        // https://upload.wikimedia.org/wikipedia/commons/1/1d/Linecons_small-truck.svg\n        //https://run.plnkr.co/Tkq0QXNn1QiT4kuO/sample-shapes/truck.svg\n        //console.log(\"Object returned from paperjs: \", paperJsShapesGroup);\n        paperJsShapesGroup.fitBounds(paper.view.bounds);\n        paperJsShapesGroup.visible = false;\n        let paths = getPaths(paperJsShapesGroup);\n        let newShapeGroup = new ShapeGroup();\n        newShapeGroup.paperJSGroup = new paper.Group(paths);\n        newShapeGroup.paperJSGroup.fillColor = new paper.Color(1, 1, 1, 0);\n        console.log(\"Creating shapes for \" + paths.length + \" paths\");\n        // We have a maxPaths here to debug hangs and issues with images that have lots of paths\n        let maxPaths = paths.length;\n        if (maxPaths > 80)\n          maxPaths = 80;\n        //for(var i = 0; i < paths.length; i++) {\n        for(var i = 0; i < maxPaths; i++) {\n          paths[i].clipMask = false;\n          //var newShape = new Shape(paths[i].copyTo(paper.project), 'Shape X');\n          var newShape = new Shape(paths[i], 'Shape X');\n          newShape.path.strokeColor = 'black';\n          newShape.path.strokeWidth = 1;\n          newShape.path.visible = true;\n          newShape.path.opacity = 1; \n          //newShape.path.selected = true;\n          newShape.path.fillColor = new paper.Color(1, 1, 1, 0);\n          newShape.path.clipMask = false;\n          try {\n            newShape.addStitchPath(ourappcontroller.settings.defaultStitchType);\n          } catch (e) {\n            console.log(\"Exception occurred while attempting to stitch!\");\n            console.log(e);\n          } finally {}\n          newShape.group = newShapeGroup;\n          newShapeGroup.shapes.push(newShape);\n        }\n        ourappcontroller.shapeGroups.push(newShapeGroup);\n        paper.project.activeLayer.clipped = false;\n        console.log(\"After importing new SVG shapes, our shapeGroups look like this:\");\n        console.log(ourappcontroller.shapeGroups);\n      }\n    });\n    //console.log('PaperJS paper object:');\n    //console.log(paper);\n  }\n  \n  exportDst(dataFormat: any) {\n    console.log(\"Exporting DST file.\");\n    // Create our stitch list\n    var stitchList = [];\n    var maxStitchDistance = 0;\n    var lastStitchX = 0;\n    var lastStitchY = 0;\n    var maxX = 0;\n    var maxY = 0;\n    if(dataFormat.flipHorizontal || dataFormat.flipVertical) {\n      for (let shapeGroupIndex = 0; shapeGroupIndex < this.shapeGroups.length; shapeGroupIndex++) {\n        // We need to calculate our max X and Y coordinates\n        for(var i = 0; i < this.shapeGroups[shapeGroupIndex].shapes.length; i++) {\n          var shape = this.shapeGroups[shapeGroupIndex].shapes[i];\n          for(var j = 0; j < shape.stitchPaths.length; j++) {\n            var stitchPath = shape.stitchPaths[j].path;\n            for(var k = 0; k < stitchPath.segments.length; k++) {\n              maxX = Math.max(stitchPath.segments[k].point.x, maxX);\n              maxY = Math.max(stitchPath.segments[k].point.y, maxY);\n            }\n          }\n        }\n      }\n    }\n    for (let shapeGroupIndex = 0; shapeGroupIndex < this.shapeGroups.length; shapeGroupIndex++) {\n        for(var i = 0; i < this.shapeGroups[shapeGroupIndex].shapes.length; i++) {\n        //for(var i = 5; i < 6; i++) {\n          var shape = this.shapeGroups[shapeGroupIndex].shapes[i];\n          for(var j = 0; j < shape.stitchPaths.length; j++) {\n            var stitchPath = shape.stitchPaths[j].path;\n            for(var k = 0; k < stitchPath.segments.length; k++) {\n            //for(var k = 0; k < 10; k++) {\n              //console.log(\"k: \",k)\n              console.log(\"Stitchpath Point: (\", stitchPath.segments[k].point.x, \", \", stitchPath.segments[k].point.y, \")\");\n              var stitchX = stitchPath.segments[k].point.x / this.settings.pixels_per_unit;\n              var stitchY = stitchPath.segments[k].point.y / this.settings.pixels_per_unit;\n              if(dataFormat.flipHorizontal)\n                stitchX = maxX - stitchX;\n              if(dataFormat.flipVertical)\n                stitchY = maxY - stitchY;\n              if(dataFormat.minStitchLengthMM) {\n                stitchX = stitchX - (stitchX % dataFormat.minStitchLengthMM)\n                stitchY = stitchY - (stitchY % dataFormat.minStitchLengthMM)\n              }\n              var stitchDistanceX = stitchX - lastStitchX;\n              var stitchDistanceY = stitchY - lastStitchY;\n\n              console.log(\"Stitch Distance: (\", stitchDistanceX, \", \", stitchDistanceY, \")\");\n              var currentStitch = new Stitch(stitchDistanceX, stitchDistanceY);\n              lastStitchX = stitchX;\n              lastStitchY = stitchY;\n              if(stitchDistanceX > maxStitchDistance)\n                maxStitchDistance = stitchDistanceX;\n              if(stitchDistanceY > maxStitchDistance)\n                maxStitchDistance = stitchDistanceY;\n              //console.log(\"currentStitch: \", currentStitch);\n              if(k === 0) {\n                currentStitch.flags |= STITCH_TYPE_FLAGS.JUMP;\n              }\n              stitchList.push(currentStitch);\n            }\n          }\n        }\n    }\n    console.log(\"Max Stitch Distance: \", maxStitchDistance);\n    console.log(\"Stitches before normalization: \", stitchList);\n    console.log(\"ShapeGroups: \", this.shapeGroups);\n    if(dataFormat.maxStitchLengthMM && maxStitchDistance > dataFormat.maxStitchLengthMM) {\n      // Adjust all of our stitch moves to be under the max stitch distance\n      for(var i=0; i < stitchList.length; i++) {\n        var stitchAbsX = Math.abs(stitchList[i].x);\n        var stitchAbsY = Math.abs(stitchList[i].y);\n        if(stitchAbsX > dataFormat.maxStitchLengthMM || stitchAbsY > dataFormat.maxStitchLengthMM) {\n          console.log(\"Stitch \",stitchList[i],\" exceeds max stitch length of \",dataFormat.maxStitchLengthMM);\n          // Split into chunks smaller than the max stitch length\n          var numSplits = Math.max(Math.ceil(stitchAbsX / dataFormat.maxStitchLengthMM), Math.ceil(stitchAbsY / dataFormat.maxStitchLengthMM));\n          var stitchLengthX = stitchList[i].x / numSplits;\n          var stitchLengthY = stitchList[i].y / numSplits;\n          var flags = stitchList[i].flags;\n          console.log(\"Splitting into \",numSplits,\" chunks of (\",stitchLengthX,\",\",stitchLengthY,\")\");\n          for(var j=0; j < numSplits; j++) {\n            if(j === 0) {\n              stitchList.splice(i, 1, new Stitch(stitchLengthX, stitchLengthY, flags));\n            } else {\n              stitchList.splice(i, 0, new Stitch(stitchLengthX, stitchLengthY, flags));\n            }\n          }\n        }\n        //stitchList[i].x = stitchList[i].x / (maxStitchDistance / 120);\n        //stitchList[i].y = stitchList[i].y / (maxStitchDistance / 120);\n      }\n    }\n\n    var downloadBlob = function(data: any, fileName: string, mimeType: string) {\n      var blob, url: any;\n      blob = new Blob([data], {\n        type: mimeType\n      });\n      url = window.URL.createObjectURL(blob);\n      downloadURL(url, fileName, mimeType);\n      setTimeout(function() {\n        return window.URL.revokeObjectURL(url);\n      }, 1000);\n    };\n    \n    var downloadURL = function(data: any, fileName: string, mimeType?: string) {\n      var a: any;\n      a = document.createElement('a');\n      a.href = data;\n      a.download = fileName;\n      document.body.appendChild(a);\n      a.style = 'display: none';\n      a.click();\n      a.remove();\n    };\n    var outputFileName = 'EmbroideryDesign.bin'\n    if(dataFormat.fileExtension)\n      outputFileName = 'EmbroideryDesign.' + dataFormat.fileExtension\n    downloadBlob(createDstDataView(stitchList), outputFileName, 'application/octet-stream');\n  }\n}\n\nvar getPaths = function(shape: any): any[] {\n  // This function will take a complicated PaperJS shape made up of several\n  // groups, paths, etc and split it up into a list of paths for easier processing.\n  //console.log(\"In getPaths() processing shape \", shape);\n  var paths: any[] = [];\n  if(shape instanceof paper.Group || shape instanceof paper.CompoundPath) {\n   // console.log(\"Processing \",shape.children.length,\" children of shape.\")\n    for(var i = 0; i < shape.children.length; i++) {\n      paths = paths.concat(getPaths(shape.children[i]));\n      //console.log(\"paths: \",paths,shape,i);\n    }\n  } else if(shape instanceof paper.Shape) {\n    paths.push(shape.toPath());\n    shape.remove();\n  } else if(shape instanceof paper.Path){\n    paths.push(shape);\n  } else {\n    console.log(\"WARNING: Unknown shape: \", shape);\n  }\n  //console.log(\"Paths returned from getPaths: \",paths);\n  return paths;\n}\n","/**\n * Copyright 2017 Grizzly Stitch\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n**/\n\nimport { Component, Input } from '@angular/core';\n// These two imports need to be here for ahead-of-time compilation\nimport 'reflect-metadata';\nimport 'zone.js/dist/zone';\n\n\n@Component({\n  selector: 'satin-stitch-corner-props',\n  template: `\n<div class=\"shape-list-title\" [ngClass]=\"{'selected-row': shapeTreeComponent.selectedObj === CornerProps}\">\n  <i (click)=\"togglePropDisplay()\" [ngClass]=\"{'glyphicon-triangle-bottom': expanded, 'glyphicon-triangle-right': !expanded }\" class=\"glyphicon action-icon\"></i>\n  <span style=\"font-weight:bold\" class=\"myselectable\" (click)=\"shapeTreeComponent.selected(CornerProps)\">Corner {{CornerProps.index}}</span>\n</div>\n<div id=\"corner{{uniqueId}}props\" class=\"collapse indent\">\n  <div>\n    <span class=\"dropdown\">\n      <button class=\"btn btn-sm dropdown-toggle\" style=\"background-color:white; border-color:#CCC; margin-bottom:5px\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" title=\"Corner Stitch Type\" aria-haspopup=\"true\" aria-expanded=\"true\">\n        {{CornerProps.type}}\n        <span class=\"caret\"></span>\n      </button>\n      <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n        <li class=\"disabled\"><a href=\"#\">Choose a Corner Type</a></li>\n        <li role=\"separator\" class=\"divider\"></li>\n        <li><a href=\"#\" (click)=\"changeCornerType('Miter')\">Mitered Corner</a></li>\n        <li><a href=\"#\" (click)=\"changeCornerType('Feather')\">Feathered Corner</a></li>\n        <li><a href=\"#\" (click)=\"changeCornerType('Butt')\">Butted Corner</a></li>\n      </ul>\n    </span>\n  </div>\n  <div *ngIf=\"CornerProps.type == 'Feather'\">Feather Distance: <span id=\"feather-distance-{{uniqueId}}\" class=\"editable\" title=\"Feather Distance\">{{CornerProps.featherDistance}}</span></div>\n  <div *ngIf=\"CornerProps.type == 'Butt'\">\n    Butt Segment:  \n    <span class=\"dropdown\">\n      <button class=\"btn btn-sm dropdown-toggle\" style=\"background-color:white; border-color:#CCC\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n        {{CornerProps.buttSegment}}\n        <span class=\"caret\"></span>\n      </button>\n      <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n        <li class=\"disabled\"><a href=\"#\">Choose Which Segment Will Butt</a></li>\n        <li role=\"separator\" class=\"divider\"></li>\n        <li><a href=\"#\" (click)=\"changeButtSegment(0)\">0</a></li>\n        <li><a href=\"#\" (click)=\"changeButtSegment(1)\">1</a></li>\n      </ul>\n    </span>\n  </div>\n</div>\n    `,\n})\nexport class SatinStitchCornerPropsComponent {\n  @Input() CornerProps: any;\n  @Input() StitchPath: any;\n  @Input() shapeTreeComponent: any;\n  expanded: boolean;\n  uniqueId: any;\n  selectedShape: any;\n  \n  constructor() {\n    this.expanded = false;\n    this.selectedShape = undefined;\n    this.uniqueId = GetUniqueId();\n  }\n  \n  ngAfterViewInit() {\n    this.createXEditable();\n  }\n  \n  createXEditable() {\n    // const component = this;\n    const featherDistanceElem = $(\"#feather-distance-\" + this.uniqueId);\n    featherDistanceElem.editable({\n      success: function(response: any, newValue: number) {\n        console.log(\"In xeditable for corner: \", response, newValue, $(this).data('editable'));\n        this.CornerProps.featherDistance = parseFloat(newValue.toString());\n        this.StitchPath.reStitch();\n      }.bind(this)\n    });\n  }\n  \n  changeButtSegment(newSegment) {\n    if (newSegment === this.CornerProps.buttSegment)\n      return;\n    this.CornerProps.buttSegment = newSegment;\n    this.StitchPath.reStitch();\n  }\n    \n  togglePropDisplay() {\n    // This gets called whenever the user clicks on the arrow next to the corner name\n    // We use JQuery to do our toggling so we easily get the effects\n    $('#corner' + this.uniqueId + 'props').collapse('toggle');\n    this.expanded = !this.expanded;\n  }\n  \n  changeCornerType(newCornerType) {\n    if (this.CornerProps.type === newCornerType)\n      return;\n    this.CornerProps.type = newCornerType;\n    this.StitchPath.reStitch();\n    // We have to set up the X-Editable properties as a timeout b/c the fields haven't been drawn yet\n    const component = this;\n    setTimeout(() => {\n      component.createXEditable();\n    }, 0);\n  }\n  \n  select() {\n    if (this.selectedShape !== undefined)\n      return;\n    this.selectedShape = drawBoundingBox(this.CornerProps.paperJsSegment.point);\n  }\n  \n  deselect() {\n    if (this.selectedShape === undefined)\n      return;\n    this.selectedShape.remove();\n    this.selectedShape = undefined;\n  }\n  \n}\n","/**\n * Copyright 2017 Grizzly Stitch\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n**/\n\nimport { Component, Input } from '@angular/core';\n// These two imports need to be here for ahead-of-time compilation\nimport 'reflect-metadata';\nimport 'zone.js/dist/zone';\n\n\n@Component({\n  selector: 'satin-stitch-props',\n  template: `\n<div>\n  <div style=\"padding-bottom:5px\">Stitch Width: <span id=\"{{stitchWidthId}}\">{{stitchPath.stitchProps.width}}</span></div>\n  <div style=\"padding-bottom:10px\">Stitch Density: <span id=\"{{stitchDensityId}}\">{{stitchPath.stitchProps.density}}</span></div>\n  <satin-stitch-corner-props *ngFor=\"let corner of stitchPath.stitchProps.corners\" [CornerProps]=\"corner\" [StitchPath]=\"stitchPath\" [shapeTreeComponent]=\"shapeTreeComponent\"></satin-stitch-corner-props>\n</div>\n    `,\n})\nexport class SatinStitchPropsComponent {\n  @Input() stitchPath: StitchPath;\n  @Input()\n  shapeTreeComponent: any;\n  stitchWidthId: string;\n  stitchDensityId: string;\n  \n  constructor() {\n    this.stitchWidthId = \"stitch-width-\" + GetUniqueId();\n    this.stitchDensityId = \"stitch-density-\" + GetUniqueId();\n  }\n  \n  ngAfterViewInit() {\n    // We have to wait until after the view has been initialized to access our IDs\n    let stitchPath = this.stitchPath;\n    let stitchWidthElem = $('#' + this.stitchWidthId);\n    stitchWidthElem.editable({\n      success: function(response: any, newValue: number) {\n        stitchPath.stitchProps.width = parseFloat(newValue.toString());\n        stitchPath.reStitch();\n      }\n    });\n    let stitchDensityElem = $('#' + this.stitchDensityId);\n    stitchDensityElem.editable({\n      success: function(response: any, newValue: number) {\n        stitchPath.stitchProps.density = parseFloat(newValue.toString());\n        stitchPath.reStitch();\n      }\n    });\n  }\n}\n","\n\nimport {\n  Component,\n  Input,\n} from '@angular/core';\n//import 'reflect-metadata';\n//import 'zone.js/dist/zone';\n\n\n@Component({\n  selector: 'shape-tree',\n  template: `\n    <div class=\"shape-list\">\n      <div *ngFor=\"let shapeGroup of shapeGroups\">\n        <div class=\"shape-list-title\" [ngClass]=\"{'selected-row': selectedObj === shapeGroup}\">\n          <i class=\"glyphicon expand-icon\" [ngClass]=\"{'glyphicon-triangle-bottom': shapeGroup.expanded, 'glyphicon-triangle-right': !shapeGroup.expanded }\" (click)=\"toggleBranch(shapeGroup)\"></i>\n          <i class=\"glyphicon glyphicon-unchecked\" (click)=\"selected(shapeGroup)\"></i>\n          <span id=\"shapeGroup-name-{{shapeGroup.id}}\" href=\"#\" style=\"font-weight:bold\">{{shapeGroup.name}}</span>\n          <span class=\"action-icons\"><i (click)=\"shapeGroup.paperJSGroup.visible = !shapeGroup.paperJSGroup.visible\" [ngClass]=\"{'glyphicon-eye-open': shapeGroup.paperJSGroup.visible, 'glyphicon-eye-close': !shapeGroup.paperJSGroup.visible }\" class=\"glyphicon action-icon\" [attr.title]=\"shapeGroup.paperJSGroup.visible ? 'Hide' : 'Show'\"></i></span>\n        </div>\n        <div id=\"collapseShapeGroup{{shapeGroup.id}}\" class=\"collapse indent\">\n          <span style=\"white-space:nowrap\"><span class=\"non-editable-text\">Size: </span><span id=\"shapeGroup-{{shapeGroup.id}}-width\" title=\"Width\">{{pxToUnits(shapeGroup.paperJSGroup.bounds.width)}}</span><span class=\"non-editable-text\"> {{settings.measurement_units}} x </span><span id=\"shapeGroup-{{shapeGroup.id}}-height\" title=\"Height\">{{pxToUnits(shapeGroup.paperJSGroup.bounds.height)}}</span><span class=\"non-editable-text\"> {{settings.measurement_units}}</span></span>\n          <div *ngFor=\"let shape of shapeGroup.shapes\">\n            <div class=\"shape-list-title\" [ngClass]=\"{'selected-row': selectedObj === shape}\"><span style=\"white-space:nowrap\">\n              <i class=\"glyphicon expand-icon\" [ngClass]=\"{'glyphicon-triangle-bottom': shape.expanded, 'glyphicon-triangle-right': !shape.expanded }\" (click)=\"toggleBranch(shape)\"></i>\n              <i class=\"glyphicon glyphicon-unchecked\" (click)=\"selected(shape)\"></i>\n              <span id=\"shape-name-{{shape.id}}\" href=\"#\" style=\"font-weight:bold\">{{shape.name}}</span>\n              <span class=\"action-icons\">\n                <i id=\"shape-{{shape.id}}-color\" class=\"glyphicon glyphicon-stop\" title=\"Shape Color\"> </i>\n                <i class=\"glyphicon glyphicon-plus\" title=\"Add a Stitch\" (click)=\"shape.addStitchPath()\"> </i>\n                <i (click)=\"shape.path.visible = !shape.path.visible\" [ngClass]=\"{'glyphicon-eye-open': shape.path.visible, 'glyphicon-eye-close': !shape.path.visible }\" class=\"glyphicon action-icon\" [attr.title]=\"shape.path.visible ? 'Hide' : 'Show'\"></i>\n                <i class=\"glyphicon glyphicon-trash\" (click)=\"shapeToDelete = shape\" data-toggle=\"modal\" data-target=\"#deleteShapeModal\" title=\"Delete\"> </i>\n              </span>\n            </span></div>\n            <div id=\"collapseShape{{shape.id}}\" class=\"collapse indent\">\n              <!-- This div gets expanded and collapsed when you click the triangle icon before the shape title above -->\n              <!-- Add any shape details here -->\n              <div style=\"padding-bottom:5px\"><span style=\"white-space:nowrap; padding-bottom:5px\">Size: <span id=\"shape-{{shape.id}}-width\" title=\"Width\">{{pxToUnits(shape.path.bounds.width)}}</span> {{settings.measurement_units}} x <span id=\"shape-{{shape.id}}-height\" title=\"Height\">{{pxToUnits(shape.path.bounds.height)}}</span> {{settings.measurement_units}}</span></div>\n              <div style=\"padding-bottom:5px\"><span style=\"white-space:nowrap; padding-bottom:10px\">Position: <span id=\"shape-{{shape.id}}-position-x\" title=\"X\">{{pxToUnits(shape.path.position.x)}}</span> {{settings.measurement_units}} x <span id=\"shape-{{shape.id}}-position-y\" title=\"Y\">{{pxToUnits(shape.path.position.y)}}</span> {{settings.measurement_units}}</span></div>\n              <div class=\"shape-stitch-list\">\n                <stitchpath-props *ngFor=\"let stitchPath of shape.stitchPaths\" [stitchPath]=\"stitchPath\" [shapeTreeComponent]=\"this\"></stitchpath-props>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n<!-- Delete Shape Confirmation Modal -->\n<div class=\"modal fade\" id=\"deleteShapeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteShapeModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <span class=\"modal-title\" id=\"deleteShapeModalLabel\">Confirm Shape Delete</span>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        Are you sure you want to delete the shape {{shapeToDelete.name}}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"shapeToDelete.remove()\" data-dismiss=\"modal\">Delete</button>\n      </div>\n    </div>\n  </div>\n</div>\n    `,\n})\nexport class ShapeTreeComponent {\n  @Input()\n  shapeGroups: ShapeGroup[];\n  @Input()\n  settings: any;\n  \n  selectedObj: any;\n  lastShapesSize: number;\n  shapeToDelete: Shape;\n  \n  constructor() {\n    this.lastShapesSize = -1;\n    this.shapeToDelete = new Shape();\n  }\n  \n  ngAfterViewChecked() {\n    // This code needs to go in ngAfterViewChecked b/c it needs to be run after the elements have been created\n    if(this.shapeGroups.length !== this.lastShapesSize) {\n      let controller = this;\n      for(let i = 0; i < this.shapeGroups.length; i++) {\n        let shapeGroup = this.shapeGroups[i];\n        $('#shapeGroup-name-' + shapeGroup.id).editable({\n          title: 'Enter New Group Name',\n          placement: 'bottom',\n          success: function(response: any, newValue: string) {\n            console.log(\"In success handler: \", response, newValue, i);\n          }\n        });\n        $('#shapeGroup-' + shapeGroup.id + '-width').editable({\n          success: function(response: any, newValue: number) {\n            shapeGroup.changeWidth(controller.unitsToPx(newValue));\n          }\n        });\n        $('#shapeGroup-' + shapeGroup.id + '-height').editable({\n          success: function(response: any, newValue: number) {\n            shapeGroup.changeHeight(controller.unitsToPx(newValue));\n          }\n        });\n        for(let j = 0; j < this.shapeGroups[i].shapes.length; j++) {\n          let shape = this.shapeGroups[i].shapes[j];\n          // Set up our editable balloons for the shape name\n          $('#shape-name-' + shape.id).editable({\n            title: 'Enter Shape Name',\n            success: function(response: any, newValue: string) {\n              console.log(\"In success handler: \", response, newValue, i);\n            }\n          });\n          // Set up our editable balloons for the shape size and position\n          $('#shape-' + shape.id + '-height').editable({\n            success: function(response: any, newValue: number) {\n              shape.changeHeight(controller.unitsToPx(newValue));\n            }\n          });\n          $('#shape-' + shape.id + '-width').editable({\n            success: function(response: any, newValue: number) {\n              shape.changeWidth(controller.unitsToPx(newValue));\n            }\n          });\n          $('#shape-' + shape.id + '-position-x').editable({\n            success: function(response: any, newValue: number) {\n              shape.moveX(controller.unitsToPx(newValue));\n            }\n          });\n          $('#shape-' + shape.id + '-position-y').editable({\n            success: function(response: any, newValue: number) {\n              shape.moveY(controller.unitsToPx(newValue));\n            }\n          });\n          // Set the shape color picker color and events\n          $('#shape-' + shape.id + '-color').css('color', shape.path.strokeColor.toCSS());\n          $('#shape-' + shape.id + '-color').colorpicker({\n            color: shape.path.strokeColor.toCSS(),\n          }).on('changeColor', function(e) {\n            console.log(\"Color changed to \",e.color.toString('rgba'));\n            shape.path.strokeColor = e.color.toString('rgba');\n            $('#shape-' + shape.id + '-color').css('color', e.color.toString('rgba'));\n          });\n        }\n      }\n      this.lastShapesSize = this.shapeGroups.length;\n    }\n  }\n  \n  selected(newSelection) {\n    // If we already have something selected and it has a deselect() function, call it\n    if (this.selectedObj !== undefined && this.selectedObj.deselect !== undefined)\n      this.selectedObj.deselect();\n    if (newSelection === this.selectedObj) {\n      // If we clicked on something that's already selected, we go to nothing selected\n      this.selectedObj = undefined;\n      return;\n    }\n    this.selectedObj = newSelection;\n    if (this.selectedObj.select !== undefined)\n      newSelection.select();\n  }\n\n  toggleBranch(branch: Shape | StitchPath | ShapeGroup) {\n    // This gets called whenever the user clicks on the arrow next to the shape group name, shape name, or stitch path\n    branch.expanded = !branch.expanded;\n    if(branch instanceof Shape) {\n      (<any>$('#collapseShape'+branch.id)).collapse('toggle');\n    } else if(branch instanceof StitchPath) {\n      (<any>$('#collapseStitch'+branch.stitchOrder)).collapse('toggle');\n    } else if(branch instanceof ShapeGroup) {\n      (<any>$('#collapseShapeGroup'+branch.id)).collapse('toggle');\n    }\n  }\n  \n  pxToUnits(pxValue: number) {\n    // Limit everything to 2 decimal digits. TODO: Make the rounding customizable\n    return Math.round(pxValue / this.settings.pixels_per_unit * 100) / 100;\n  }\n  \n  unitsToPx(unitValue: number) {\n    // Limit everything to 2 decimal digits. TODO: Make the rounding customizable\n    return unitValue * this.settings.pixels_per_unit;\n  }\n  \n}\n","/**\n * Copyright 2017 Grizzly Stitch\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n**/\n\nimport { Component, Input } from '@angular/core';\n// These two imports need to be here for ahead-of-time compilation\nimport 'reflect-metadata';\nimport 'zone.js/dist/zone';\n\n\n@Component({\n  selector: 'stitchpath-props',\n  template: `\n<div style=\"text-decoration:nowrap; padding-bottom:5px\"><!-- Stitch Path Title --><span style=\"white-space:nowrap\">\n  <i class=\"glyphicon expand-icon\" [ngClass]=\"{'glyphicon-triangle-bottom': expanded, 'glyphicon-triangle-right': !expanded }\" (click)=\"togglePropDisplay()\"></i>\n  <i class=\"glyphicon glyphicon-pencil\"> </i>\n  <span class=\"dropdown\">\n    <button class=\"btn btn-sm dropdown-toggle\" style=\"background-color:white; border-color:#CCC\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n      {{stitchPath.stitchType.name}}\n      <span class=\"caret\"></span>\n    </button>\n    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n      <li class=\"disabled\"><a href=\"#\">Choose a Stitch</a></li>\n      <li role=\"separator\" class=\"divider\"></li>\n      <li *ngFor=\"let stitchType of stitchTypes\">\n        <a href=\"#\" (click)=\"changeStitchType(stitchType)\">{{stitchType.name}}</a>\n      </li>\n    </ul>\n  </span>\n  <span class=\"action-icons\">\n    <i id=\"stitchpath-{{stitchPath.stitchOrder}}-color\" class=\"glyphicon glyphicon-stop\" title=\"Stitch Color\"> </i>\n    <i class=\"glyphicon\" [ngClass]=\"{'glyphicon-eye-open': stitchPath.path.visible, 'glyphicon-eye-close': !stitchPath.path.visible }\" (click)=\"stitchPath.path.visible = stitchPath.stitchPoints.visible = !stitchPath.path.visible\" [attr.title]=\"stitchPath.path.visible ? 'Hide' : 'Show'\"></i>\n    <i class=\"glyphicon glyphicon-trash\" (click)=\"stitchPath.remove()\"title=\"Delete Stitch\"> </i>\n  </span>\n</span></div>\n<div id=\"collapseStitch{{stitchPath.stitchOrder}}\" class=\"collapse indent\">\n  <satin-stitch-props *ngIf=\"stitchPath.stitchType.name == 'Satin Outline Stitch'\" [stitchPath]=\"stitchPath\" [shapeTreeComponent]=\"shapeTreeComponent\"></satin-stitch-props>\n  <ng-container *ngIf=\"!stitchPath.stitchType.customAngularProps\">\n    <div *ngFor=\"let stitchProp of stitchPath.stitchType.stitchProps\" style=\"padding-bottom:5px\">{{stitchProp.displayName}}: {{stitchPath.stitchProps[stitchProp.keyName]}}</div>\n  </ng-container>\n</div>\n    `,\n})\nexport class StitchPathComponent {\n  @Input() stitchPath: StitchPath;\n  @Input() shapeTreeComponent: any;\n  expanded: boolean;\n  stitchTypes: StitchType[];\n  \n  constructor() {\n    this.stitchTypes = stitchTypes;\n  }\n  \n  ngAfterViewInit() {\n    // stitchpath-{{stitchPath.stitchOrder}}-color\n    let stitchPath = this.stitchPath\n    let colorPicker = $('#stitchpath-' + stitchPath.stitchOrder + '-color');\n    colorPicker.css('color', stitchPath.path.strokeColor.toCSS());\n    colorPicker.colorpicker({\n      color: stitchPath.path.strokeColor.toCSS(),\n    }).on('changeColor', function(e) {\n      //console.log(\"Color changed to \",e.color.toString('rgba'));\n      let colorString = e.color.toString('rgba');\n      stitchPath.path.strokeColor = colorString;\n      stitchPath.stitchPoints.strokeColor = colorString;\n      stitchPath.stitchPoints.fillColor = colorString;\n      colorPicker.css('color', colorString);\n    });\n  }\n  \n  togglePropDisplay() {\n    // This gets called whenever the user clicks on the arrow next to the stitch\n    // We use JQuery to do our toggling so we easily get the effects\n    $('#collapseStitch' + this.stitchPath.stitchOrder).collapse('toggle');\n    this.expanded = !this.expanded;\n  }\n  \n  changeStitchType(stitchType: StitchType) {\n    console.log(\"Changing stitch type for \", this.stitchPath, \" to \", stitchType);\n    this.stitchPath.setStitchType(stitchType);\n    console.log(\"After changing the stitch type our shapeGroups now look like this:\");\n    console.log(this.shapeTreeComponent);\n  }\n  \n}\n","/**\n * @license Angular v0.10.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}(function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                while (_uncaughtPromiseErrors.length) {\n                    const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        try {\n                            // try to print more readable error log\n                            throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            const error = err;\n                            error.rejection = value;\n                            error.promise = promise;\n                            error.zone = Zone.current;\n                            error.task = Zone.currentTask;\n                            _uncaughtPromiseErrors.push(error);\n                            api.scheduleMicroTask(); // to make sure that it is running\n                        }\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        class ZoneAwarePromise {\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            then(onFulfilled, onRejected) {\n                const chainPromise = new this.constructor(null);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                const chainPromise = new this.constructor(null);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            function checkIsPassive(task) {\n                if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                    typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                    // options is a non-null non-undefined object\n                    // passive is not supported\n                    // don't pass options as object\n                    // just pass capture as a boolean\n                    task.options = !!taskData.options.capture;\n                    taskData.options = task.options;\n                }\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const options = arguments[2];\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                    let capture;\n                    let once = false;\n                    if (options === undefined) {\n                        capture = false;\n                    }\n                    else if (options === true) {\n                        capture = true;\n                    }\n                    else if (options === false) {\n                        capture = false;\n                    }\n                    else {\n                        capture = options ? !!options.capture : false;\n                        once = options ? !!options.once : false;\n                    }\n                    const zone = Zone.current;\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    let symbolEventName;\n                    if (!symbolEventNames) {\n                        // the code is duplicate, but I just want to get some better performance\n                        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                        zoneSymbolEventNames$1[eventName] = {};\n                        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                        symbolEventName = capture ? symbolCapture : symbol;\n                    }\n                    else {\n                        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    }\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                let capture;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                }\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplyconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n}));\n"],"sourceRoot":"webpack:///"}